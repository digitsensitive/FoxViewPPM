name: Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-windows:
    runs-on: windows-latest

    strategy:
      matrix:
        os: [windows-latest]
        build_type: [Release]
        c_compiler: [gcc]
        cpp_compiler: [g++]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure CMake for Windows
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ github.workspace }}
          -G "MinGW Makefiles"

      - name: Build for Windows
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

      - name: Deploy for Windows
        uses: actions/upload-artifact@v3
        with:
          name: "FoxViewPPM-windows"
          path: build/FoxViewPPM.exe

  build-macos:
    runs-on: macos-latest

    strategy:
      matrix:
        os: [macos-latest]
        build_type: [Release]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set reusable strings for macOS
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure CMake for macOS
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ github.workspace }}

      - name: Build for macOS
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

      - name: Deploy for macOS
        uses: actions/upload-artifact@v3
        with:
          name: "FoxViewPPM-macos"
          path: build/FoxViewPPM
# Optionally, you may want to add a matrix entry for Linux builds as well.
